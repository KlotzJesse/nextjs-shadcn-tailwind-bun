{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.performance_metrics": {
      "name": "performance_metrics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "component": {
          "name": "component",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "metric_type": {
          "name": "metric_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_perf_component": {
          "name": "idx_perf_component",
          "columns": [
            {
              "expression": "component",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_perf_timestamp": {
          "name": "idx_perf_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_perf_type": {
          "name": "idx_perf_type",
          "columns": [
            {
              "expression": "metric_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.spatial_ref_sys": {
      "name": "spatial_ref_sys",
      "schema": "",
      "columns": {
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auth_name": {
          "name": "auth_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "auth_srid": {
          "name": "auth_srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srtext": {
          "name": "srtext",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        },
        "proj4text": {
          "name": "proj4text",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "spatial_ref_sys_srid_check": {
          "name": "spatial_ref_sys_srid_check",
          "value": "(srid > 0) AND (srid <= 998999)"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.api_cache": {
      "name": "api_cache",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "cache_key": {
          "name": "cache_key",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_api_cache_expires": {
          "name": "idx_api_cache_expires",
          "columns": [
            {
              "expression": "expires_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_cache_key": {
          "name": "idx_api_cache_key",
          "columns": [
            {
              "expression": "cache_key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_cache_cache_key_unique": {
          "columns": [
            "cache_key"
          ],
          "nullsNotDistinct": false,
          "name": "api_cache_cache_key_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.error_logs": {
      "name": "error_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "error_code": {
          "name": "error_code",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stack": {
          "name": "stack",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "context": {
          "name": "context",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_error_code": {
          "name": "idx_error_code",
          "columns": [
            {
              "expression": "error_code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_error_timestamp": {
          "name": "idx_error_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_error_user": {
          "name": "idx_error_user",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.postal_codes": {
      "name": "postal_codes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true
        },
        "granularity": {
          "name": "granularity",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "geometry": {
          "name": "geometry",
          "type": "geometry(MultiPolygon,4326)",
          "primaryKey": false,
          "notNull": true
        },
        "properties": {
          "name": "properties",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "bbox": {
          "name": "bbox",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_postal_codes_code": {
          "name": "idx_postal_codes_code",
          "columns": [
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_postal_codes_geometry": {
          "name": "idx_postal_codes_geometry",
          "columns": [
            {
              "expression": "geometry",
              "asc": true,
              "nulls": "last",
              "opclass": "gist_geometry_ops_2d",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gist",
          "with": {}
        },
        "idx_postal_codes_granularity": {
          "name": "idx_postal_codes_granularity",
          "columns": [
            {
              "expression": "granularity",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_postal_codes_granularity_code": {
          "name": "idx_postal_codes_granularity_code",
          "columns": [
            {
              "expression": "granularity",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.states": {
      "name": "states",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true
        },
        "geometry": {
          "name": "geometry",
          "type": "geometry(MultiPolygon,4326)",
          "primaryKey": false,
          "notNull": true
        },
        "properties": {
          "name": "properties",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "bbox": {
          "name": "bbox",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_states_code": {
          "name": "idx_states_code",
          "columns": [
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_states_geometry": {
          "name": "idx_states_geometry",
          "columns": [
            {
              "expression": "geometry",
              "asc": true,
              "nulls": "last",
              "opclass": "gist_geometry_ops_2d",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gist",
          "with": {}
        },
        "idx_states_name": {
          "name": "idx_states_name",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "states_code_unique": {
          "columns": [
            "code"
          ],
          "nullsNotDistinct": false,
          "name": "states_code_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.geography_columns": {
      "name": "geography_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geography_column": {
          "name": "f_geography_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, postgis_typmod_dims(a.atttypmod) AS coord_dimension, postgis_typmod_srid(a.atttypmod) AS srid, postgis_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE t.typname = 'geography'::name AND a.attisdropped = false AND a.atttypid = t.oid AND a.attrelid = c.oid AND c.relnamespace = n.oid AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    },
    "public.geometry_columns": {
      "name": "geometry_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geometry_column": {
          "name": "f_geometry_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(30)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database()::character varying(256) AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geometry_column, COALESCE(postgis_typmod_dims(a.atttypmod), sn.ndims, 2) AS coord_dimension, COALESCE(NULLIF(postgis_typmod_srid(a.atttypmod), 0), sr.srid, 0) AS srid, replace(replace(COALESCE(NULLIF(upper(postgis_typmod_type(a.atttypmod)), 'GEOMETRY'::text), st.type, 'GEOMETRY'::text), 'ZM'::text, ''::text), 'Z'::text, ''::text)::character varying(30) AS type FROM pg_class c JOIN pg_attribute a ON a.attrelid = c.oid AND NOT a.attisdropped JOIN pg_namespace n ON c.relnamespace = n.oid JOIN pg_type t ON a.atttypid = t.oid LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ''''::text, 2), ')'::text, ''::text) AS type FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%geometrytype(% = %'::text) st ON st.connamespace = n.oid AND st.conrelid = c.oid AND (a.attnum = ANY (st.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text)::integer AS ndims FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%ndims(% = %'::text) sn ON sn.connamespace = n.oid AND sn.conrelid = c.oid AND (a.attnum = ANY (sn.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text), '('::text, ''::text)::integer AS srid FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%srid(% = %'::text) sr ON sr.connamespace = n.oid AND sr.conrelid = c.oid AND (a.attnum = ANY (sr.conkey)) WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT c.relname = 'raster_columns'::name AND t.typname = 'geometry'::name AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}